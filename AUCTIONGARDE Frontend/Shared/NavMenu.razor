<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>

<div id="mySidebar" class="sidebar">
  <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">×</a>
        <a href="/">
            <i class="material-icons">home</i> Home
        </a>
        <a href="/auctionbuy">
            <i class="oi oi-cart"></i> Auctions
        </a>
        <a href="/auctionstate">
            <i class="oi oi-loop-circular"></i> Auction State
        </a>
        <div class="dropdown">
            
            <a class="dropbtn"><i class="material-icons">storefront</i> Sell<i class="material-icons">arrow_drop_down</i></a>
            <div class="dropdown-content">
                <a href="/addauctionitem">Auction Item +</a>
                <a href="/auctioneditems">Auctioned Items</a>
                <a href="/closedauctions">Closed Auctions</a>
            </div>
            
            
        </div>
        @if(authenticated && role == "Admin")
        {
            <div class="dropdown">
                <a class="dropbtn"><i class="material-icons">admin_panel_settings</i> Admin<i class="material-icons">arrow_drop_down</i></a>
                <div class="dropdown-content">
                    <a href="/manageusers">Manage Users</a>
                    <a href="/manageproducts">Manage Products</a>

                </div>
            </div>
        }
        
</div>

<div id="main">
  <button class="openbtn" onclick="openNav()">☰</button>  
</div>

<script>
function openNav() {
  document.getElementById("mySidebar").style.width = "250px";
  //document.getElementById("main").style.marginLeft = "250px";
   // Console.WriteLine("open menu");
}

function closeNav() {
  document.getElementById("mySidebar").style.width = "0";
  document.getElementById("main").style.marginLeft= "0";
}
</script>
   
</body>
</html> 
@code{
    [CascadingParameter]
    public Task<AuthenticationState> authSate { get; set; }
    public string role { get; set; }
    public bool authenticated { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var state = await authSate;
        role = state.User.FindFirst("role")?.Value;
        authenticated = state.User.Identity.IsAuthenticated;
    }
}
